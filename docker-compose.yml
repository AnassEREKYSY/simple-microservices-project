version: '3'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]  # Check if frontend is responding
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  backend:
    build:
      context: ./backend
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api"]  # Check if backend API is responding
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    volumes:
      - ./database:/app/database
    environment:
      - DB_HOST=database
      - DB_USER=your-user
      - DB_PASSWORD=your-password
      - DB_NAME=your-db
    depends_on:
      - database

  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: your-user
      POSTGRES_PASSWORD: your-password
      POSTGRES_DB: your-db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "your-user", "-d", "your-db", "-h", "localhost"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

volumes:
  postgres_data:
